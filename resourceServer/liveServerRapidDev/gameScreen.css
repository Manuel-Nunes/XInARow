*{
  color: var(--fontColor);
  font-size: large;
}

:root{
  --playeOneColor: #4267B2;
  --playerTwoColor: #bd984d;
  --playerOneColorBG: #283e6b;
  --playerTwoColorBG: #8a6e37;
}

main{
  display: grid;
  grid-template-columns: 2fr 8fr 2fr;
  grid-template-rows: 1fr 1fr 1fr;
  height: 87vh;
  width: 100%;
  
  align-items: center;
  justify-items: center;
}

header{
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: var(--header);
  height: 13vh;
  box-shadow: 0 var(--externalShadowSize) var(--externalShadowSize) var(--textShadow);

  border-radius: 0 0 2vw 2vw;
}

h1{
  font-size: xx-large;
  margin: 1em 1em;
  text-shadow: var(--textShadowSize) var(--textShadowSize) var(--textShadowSize) var(--textShadow);
}

p{
  text-shadow: var(--textShadowSize) var(--textShadowSize) var(--textShadowSize) var(--textShadow);
}

button{
  background-color: var(--button);
  margin: 1% 1%;
  height: 80%;
  aspect-ratio: 1/1;
  border-radius: 20%;

  border: none;
  border-width: 0.2em;
}

button:hover{
  box-shadow: var(--externalShadowSize) var(--externalShadowSize) var(--externalShadowSize) var(--textShadow);
}

body{
  background-color: var(--bigBody);
  min-height: 100vh;
  min-width: 400px;
}

section{
  /* height: 90%; */
  max-height: 90%;
  aspect-ratio: 1/1;
  background-color: var(--grid);
  border-radius: 1vw;

  grid-column: 2;

  grid-row: 1/4;
}

article{
  border-radius: 20%;
  background-color: var(--article);
  width: 80%;
  margin: 10%;
  aspect-ratio: 1/1;
  align-self: baseline;
  box-shadow: var(--externalShadowSize) var(--externalShadowSize) var(--externalShadowSize) var(--textShadow);
}

.gridItem{
  display: block;
  background-color: var(--gridItem);
  width: 100%;
  aspect-ratio: 1/1;

  border-radius: 1vw;
}

.gridItem:hover{
  box-shadow: var(--externalShadowSize) var(--externalShadowSize) var(--externalShadowSize) var(--textShadow);
}

#gameGrid{
  display: grid;
  overflow: hidden;
  gap: 0.5vh;
  padding: 1vh 1vh;
  background-color: var(--bigBody);
  box-shadow:  var(--externalShadowSize) var(--externalShadowSize) calc( 8 * var(--externalShadowSize)) #2a6990,
             calc(-1 * var(--externalShadowSize)) calc(-1 * var(--externalShadowSize)) calc( 8 * var(--externalShadowSize)) #000000;
}

img{
  display: inline-block;
  background-color: var(--gridItem);
  width: 80%;
  border-radius: 20%;
  
  aspect-ratio: 1/1;
}

#player1Icon{
  animation: playerOneBackgroundCycle 1s infinite cubic-bezier(0.455, 0.03, 0.515, 0.955);
}

#player2Icon{
  animation: playerTwoBackgroundCycle 1s infinite;

}

#player1Icon{
  grid-column: 1;
  grid-row: 2;
}

#player2Icon{
  grid-column: 3;
  grid-row: 2;
}

#popup{
  display: none;
  position: absolute;
  height: 100vh;
  width: 100vw;
  background-color: rgba(0, 0, 0, 0.8);
  top: 0;
}

#outcome{
  background-color: rgb(65, 45, 45);
  display: block;
  padding: 10vw;
  border-radius: 3rem;
}

@media screen and (orientation: portrait) {
  section{
    width: 90%;
  }
}

@media screen and (orientation: landscape) {
  section{
    height: 90%;
  }
}

@keyframes playerOneBackgroundCycle {
  0% {
    box-shadow: var(--externalShadowSize) var(--externalShadowSize) var(--externalShadowSize) var(--playeOneColor);
  }
  25%{
    box-shadow: var(--externalShadowSize) calc( -1 * var(--externalShadowSize))  var(--externalShadowSize) var(--playeOneColor);
  }
  50%{
    box-shadow: calc( -1 * var(--externalShadowSize)) calc( -1 * var(--externalShadowSize))  var(--externalShadowSize) var(--playeOneColor);
  }
  
  75%{
    box-shadow: calc( -1 * var(--externalShadowSize)) var(--externalShadowSize)  var(--externalShadowSize) var(--playeOneColor);
  }

  100% {
    box-shadow: var(--externalShadowSize) var(--externalShadowSize) var(--externalShadowSize) var(--playeOneColor);
  }
}


@keyframes playerTwoBackgroundCycle {
  0% {
    box-shadow: var(--externalShadowSize) var(--externalShadowSize) var(--externalShadowSize) var(--playerTwoColor);
  }
  25%{
    box-shadow: var(--externalShadowSize) calc( -1 * var(--externalShadowSize))  var(--externalShadowSize) var(--playerTwoColor);
  }

  50%{
    box-shadow: calc( -1 * var(--externalShadowSize)) calc( -1 * var(--externalShadowSize))  var(--externalShadowSize) var(--playerTwoColor);
  }
  
  75%{
    box-shadow: calc( -1 * var(--externalShadowSize)) var(--externalShadowSize)  var(--externalShadowSize) var(--playerTwoColor);
  }

  100% {
    box-shadow: var(--externalShadowSize) var(--externalShadowSize) var(--externalShadowSize) var(--playerTwoColor);
  }
}